{
  "pipeline_steps": [
    {
      "name": "Data Collection",
      "script": "scripts/data_pipeline/01_collect_data.py",
      "description": "Collect raw NFL data from multiple sources",
      "dependencies": [],
      "timeout": 300,
      "retry_count": 3,
      "critical": true,
      "parallel_group": "data"
    },
    {
      "name": "Data Validation",
      "script": "scripts/data_pipeline/02_validate_data.py",
      "description": "Validate data quality and completeness",
      "dependencies": ["Data Collection"],
      "timeout": 180,
      "retry_count": 2,
      "critical": true,
      "parallel_group": "data"
    },
    {
      "name": "Data Preprocessing",
      "script": "scripts/data_pipeline/03_preprocess_analysis_data.py",
      "description": "Preprocess data for analysis pipeline",
      "dependencies": ["Data Validation"],
      "timeout": 120,
      "retry_count": 2,
      "critical": false,
      "parallel_group": "data"
    },
    {
      "name": "Monte Carlo Simulation",
      "script": "scripts/analysis/montecarlo-historical-ff.py",
      "description": "Generate team-level projections using historical data",
      "dependencies": ["Data Preprocessing"],
      "timeout": 600,
      "retry_count": 1,
      "critical": false,
      "parallel_group": "analysis"
    },
    {
      "name": "Bayesian Predictions",
      "script": "scripts/analysis/bayesian-hierarchical-ff-modern.py",
      "description": "Generate player-level predictions with uncertainty using PyMC4",
      "dependencies": ["Data Preprocessing"],
      "timeout": 900,
      "retry_count": 1,
      "critical": false,
      "parallel_group": "analysis"
    },
    {
      "name": "Team Aggregation",
      "script": "scripts/analysis/bayesian-team-aggregation.py",
      "description": "Aggregate individual predictions into team-level projections",
      "dependencies": ["Monte Carlo Simulation", "Bayesian Predictions"],
      "timeout": 300,
      "retry_count": 2,
      "critical": false,
      "parallel_group": "aggregation"
    },
    {
      "name": "Model Comparison",
      "script": "scripts/analysis/model_comparison_framework.py",
      "description": "Compare Monte Carlo vs Bayesian model performance",
      "dependencies": ["Team Aggregation"],
      "timeout": 240,
      "retry_count": 1,
      "critical": false,
      "parallel_group": "comparison"
    },
    {
      "name": "Visualization Generation",
      "script": "scripts/analysis/create_team_aggregation_visualizations.py",
      "description": "Generate comprehensive visualization charts",
      "dependencies": ["Team Aggregation"],
      "timeout": 180,
      "retry_count": 1,
      "critical": false,
      "parallel_group": "visualization"
    }
  ],
  "global_config": {
    "max_parallel_steps": 1,
    "default_timeout": 300,
    "retry_delay": 30,
    "enable_progress_monitoring": true,
    "log_level": "INFO",
    "enable_parallel_execution": false,
    "enable_error_recovery": true,
    "enable_graceful_degradation": true,
    "max_total_retries": 10,
    "pipeline_timeout": 7200
  },
      "parallel_groups": {
        "data": {
            "max_concurrent": 1,
            "description": "Data pipeline steps (must run sequentially)"
        },
        "analysis": {
            "max_concurrent": 1,
            "description": "Analysis steps (run sequentially, but each can use multiple cores internally)"
        },
        "aggregation": {
            "max_concurrent": 1,
            "description": "Aggregation steps (must run sequentially)"
        },
        "comparison": {
            "max_concurrent": 1,
            "description": "Comparison and visualization steps"
        },
        "visualization": {
            "max_concurrent": 1,
            "description": "Visualization generation"
        }
    },
  "error_handling": {
    "critical_failure_action": "stop_pipeline",
    "non_critical_failure_action": "continue_with_warnings",
    "retry_strategies": {
      "exponential_backoff": true,
      "max_backoff_multiplier": 4,
      "jitter": true
    },
    "fallback_actions": {
      "data_collection": "use_cached_data",
      "validation": "skip_validation",
      "analysis": "use_simplified_models"
    }
  },
  "monitoring": {
    "progress_update_interval": 30,
    "detailed_logging": true,
    "performance_metrics": true,
    "resource_usage_tracking": true,
    "alert_thresholds": {
      "step_timeout_warning": 0.8,
      "memory_usage_warning": 0.85,
      "cpu_usage_warning": 0.9
    }
  }
}
